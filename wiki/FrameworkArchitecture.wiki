#summary Description of the framework architecture behind the scenes.

= Introduction =

Since revision 0.5.0, the structure has gotten pretty complicated on the framework backend. This is necessary in order to provide the flexibility of using Hibernate or JPA with any number of JPA providers. But the complexity makes it necessary now to document clearly how things are arranged.


= The Projects =

There are X separate projects that make up the framework. Each corresponds to a different Maven artifact.

  * trg-test-base
    * This project has utilities, base classes, and configuration for testing the main projects. It is only referenced as a test dependency and will never be used by an end user.
  * trg-test-search
    * This project has utilities, base classes, and configuration for testing the search in main projects. It is only referenced as a test dependency and will never be used by an end user.
  * trg-search
    * The core project of the framework. This contains the Search Object interfaces, the Base Search Processor, and the `SearchFacade` interface. It also contains the JPA Search Processor and JPA Search Facade implementation.
    * packages: com.trg.search, com.trg.search.jpa, com.trg.search.flex
    * depends on: NONE
  * trg-search-hibernate
    * The standard Hibernate implementation of for search. Contains the Hibernate Search Processor and the HibernateMetadataUtil. Also includes Hibernate dependencies in the POM.
    * packages: com.trg.search.hibernate
    * depends on: trg-search
  * trg-search-jpa-hibernate
    * The Hibernate Entity Manager implementation for use with JPA. Contains utility for getting HibernateMetadataUtil from an EntityManager and the Hibernate Entity Manager dependencies in the POM. Also used to test JPA Search.
    * packages: com.trg.search.jpa.hibernate
    * depends on: trg-search, trg-search-hibernate
  * trg-dao
  * trg-dao-hibernate

= Building the Framework =