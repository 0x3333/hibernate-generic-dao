#summary We're considering different options for what methods to include in the DAO.

= Introduction =

We are considering revising what methods we include in the DAOs. Below are several ideas of methods to use.

*_Dear World: Please comment if you have any wisdom on this (or even just an opinion)._*

= Options =
== (1) ==
=== GeneralDAO interface ===
{{{
void persist(Object...)
Object merge(Object...)
T find(Class<T>, Serializable)
boolean remove(Object...)
boolean removeById(Serializable, Object...)
List<T> findAll(Class<T>)
List search(Search)
SearchResult searchAndCount(Search)
long count()
long count(Search)
Object searchUnique(Search)
boolean isAttached(Object)
void flush()
void refresh(Object)
}}}

=== RemoteDAO interface ===
{{{
Object fetch(String, Serializable)
List fetchAll(String)
Object save(Object) //create or update based on whether id already exist
void removeById(String, Serializable)
void removeEntity(Object)
void removeByIds(Object[])
void removeEntities(String, Long[])
List search(RemoteSearch)
long count(RemoteSearch)
SearchResult searchAndCount(RemoteSearch)
Object searchUnique(RemoteSearch)
}}}

= Notes =
One of the considerations is that if we provide two or more methods that do something similar (ex. merge and update), both methods will need to be overridden when the user wants to alter the functionality. This could lead to code duplication and possible inconsistencies.